{"version":3,"file":"static/js/518.7cb853aa.chunk.js","mappings":"uMAOA,EAJgB,SAACA,GACf,OAAO,gBAAKC,UAAWC,EAAAA,EAAAA,OAAS,SAAEF,EAAMG,SAC1C,E,0DCmCMC,GAAcC,EAAAA,EAAAA,GAAiB,IAkB/BC,GAAsBC,EAAAA,EAAAA,GAAU,CAAEC,KAAM,wBAAlBD,EAjBL,SAACP,GACtB,OACE,iBAAMS,SAAUT,EAAMU,aAAa,UACjC,4BACE,SAACC,EAAA,EAAK,CACJC,UAAWC,EAAAA,GACXC,KAAK,gBACLC,YAAY,qBACZC,SAAU,CAACC,EAAAA,EAAUb,MAEvB,0BACE,2CAKV,IAKA,EAtDgB,SAACJ,GACf,IAAIkB,EAAkBlB,EAAMmB,YAAYC,KAAI,SAACC,GAAM,OACjD,SAAC,IAAU,CAACP,KAAMO,EAAOP,KAAsBQ,GAAID,EAAOC,IAAtBD,EAAOC,GAAqB,IAG9DC,EAAmBvB,EAAMwB,aAAaJ,KAAI,SAACjB,GAAO,OACpD,SAAC,EAAO,CAACA,QAASA,EAAQA,QAA0BmB,GAAInB,EAAQmB,IAAxBnB,EAAQmB,GAAsB,IAgBxE,OAAKtB,EAAMyB,QAGT,iBAAKxB,UAAWC,EAAAA,EAAAA,QAAU,WACxB,gBAAKD,UAAWC,EAAAA,EAAAA,aAAe,SAAEgB,KACjC,gBAAKjB,UAAWC,EAAAA,EAAAA,SAAW,SAAEqB,KAC7B,SAACjB,EAAmB,CAACG,SAVL,SAACiB,GACnB1B,EAAM2B,UAAUD,EAAOE,cACzB,QAE0B,SAAC,KAAQ,CAACC,GAAI,UAS1C,E,UCjBA,GAAeC,E,QAAAA,KACbC,EAAAA,EAAAA,KAjBoB,SAACC,GACrB,MAAO,CACLJ,cAAeI,EAAMC,YAAYL,cACjCJ,aAAcQ,EAAMC,YAAYT,aAChCL,YAAaa,EAAMC,YAAYd,YAEnC,IAEyB,SAACe,GACxB,MAAO,CACLP,UAAW,SAACC,GACVM,GAASC,EAAAA,EAAAA,GAAuBP,GAClC,EAEJ,IAIEQ,EAAAA,EAFF,CAGEC,E","sources":["components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["import React from \"react\";\nimport s from \"./../Dialogs.module.css\";\n\nconst Message = (props) => {\n  return <div className={s.dialog}>{props.message}</div>;\n};\n\nexport default Message;\n","import React from \"react\";\nimport s from \"./Dialogs.module.css\";\nimport Message from \"./Message/Message\";\nimport DialogItem from \"./DialogItem/DialogsItem\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { Navigate } from \"react-router-dom\";\nimport { Textare } from \"../common/preloader/FormsControls/FormsControls\";\nimport { maxLenghtCreator, required } from \"../../utils/validators/validators\";\nconst Dialogs = (props) => {\n  let dialogsElements = props.dialogsData.map((dialog) => (\n    <DialogItem name={dialog.name} key={dialog.id} id={dialog.id} />\n  ));\n\n  let messagesElements = props.messagesData.map((message) => (\n    <Message message={message.message} key={message.id} id={message.id} />\n  ));\n\n  // let newMessageElement = React.createRef();\n\n  // let OnaddDialog = () => {\n  //   props.addDialog();\n  // };\n  // let onDialogChange = () => {\n  //   let text = newMessageElement.current.value;\n  //   props.updateNewDialogText(text);\n  // };\n  let addNewMessage = (values) => {\n    props.addDialog(values.newDialogText);\n  };\n\n  if (!props.isAuth) return <Navigate to={\"/login\"} />;\n\n  return (\n    <div className={s.dialogs}>\n      <div className={s.dialogsItems}>{dialogsElements}</div>\n      <div className={s.messages}>{messagesElements}</div>\n      <AddMessageFormRedux onSubmit={addNewMessage} />\n    </div>\n  );\n};\nconst maxLenght20 = maxLenghtCreator(20);\nconst AddMessageForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div>\n        <Field\n          component={Textare}\n          name=\"newDialogText\"\n          placeholder=\"Enter your message\"\n          validate={[required, maxLenght20]}\n        />\n        <div>\n          <button>Send</button>\n        </div>\n      </div>\n    </form>\n  );\n};\nconst AddMessageFormRedux = reduxForm({ form: \"dialogAddMessageForm\" })(\n  AddMessageForm\n);\n\nexport default Dialogs;\n","import { addDialogActionCreator } from \"../../redux/dialogs-reduce\";\nimport { connect } from \"react-redux\";\nimport Dialogs from \"./Dialogs\";\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\nimport { compose } from \"redux\";\n\nlet mapStateToProps = (state) => {\n  return {\n    newDialogText: state.dialogsPage.newDialogText,\n    messagesData: state.dialogsPage.messagesData,\n    dialogsData: state.dialogsPage.dialogsData,\n  };\n};\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    addDialog: (newDialogText) => {\n      dispatch(addDialogActionCreator(newDialogText));\n    },\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  withAuthRedirect\n)(Dialogs);\n"],"names":["props","className","s","message","maxLenght20","maxLenghtCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textare","name","placeholder","validate","required","dialogsElements","dialogsData","map","dialog","id","messagesElements","messagesData","isAuth","values","addDialog","newDialogText","to","compose","connect","state","dialogsPage","dispatch","addDialogActionCreator","withAuthRedirect","Dialogs"],"sourceRoot":""}